fluent at(key0_0,f0_0f);
fluent at(key1_0,f0_0f);
fluent at(key1_1,f0_0f);
fluent at_robot(f0_0f);
fluent at(key1_1,f0_2f);
fluent at(key1_1,f1_0f);
fluent at(key1_1,f1_1f);
fluent at(key1_1,f1_2f);
fluent at(key0_0,f2_0f);
fluent at(key1_0,f2_0f);
fluent at(key1_1,f2_0f);
fluent at(key1_1,f2_1f);
fluent at(key1_1,f2_2f);
fluent at_robot(f2_0f);
fluent holding(key1_1);
fluent at(key0_0,f0_1f);
fluent at(key1_0,f0_1f);
fluent at(key0_0,f1_0f);
fluent at(key1_0,f1_0f);
fluent at_robot(f0_1f);
fluent at_robot(f1_0f);
fluent at(key1_0,f0_2f);
fluent at(key1_0,f1_1f);
fluent at(key1_0,f1_2f);
fluent at(key0_0,f2_1f);
fluent at(key1_0,f2_1f);
fluent at_robot(f2_1f);
fluent holding(key1_0);
fluent at(key0_0,f0_2f);
fluent at(key0_0,f1_1f);
fluent at(key0_0,f2_2f);
fluent lock_shape(f1_2f,shape0);
fluent lock_shape(f1_2f,shape1);
fluent lock_shape(f2_1f,shape0);
fluent lock_shape(f2_1f,shape1);
fluent open(f0_1f);
fluent open(f0_0f);
fluent open(f0_2f);
fluent open(f1_1f);
fluent open(f1_0f);
fluent open(f1_2f);
fluent open(f2_1f);
fluent open(f2_0f);
fluent open(f2_2f);
fluent at_robot(f0_2f);
fluent at_robot(f1_1f);
fluent at_robot(f2_2f);
fluent holding(key0_0);
fluent lock_shape(f0_2f,shape0);
fluent lock_shape(f0_2f,shape1);
fluent lock_shape(f1_1f,shape0);
fluent lock_shape(f1_1f,shape1);
fluent lock_shape(f2_2f,shape0);
fluent lock_shape(f2_2f,shape1);
fluent arm_empty;
fluent locked(f0_0f);
fluent locked(f0_1f);
fluent locked(f0_2f);
fluent locked(f1_0f);
fluent locked(f1_1f);
fluent locked(f1_2f);
fluent locked(f2_0f);
fluent locked(f2_1f);
fluent locked(f2_2f);
fluent at(key0_0,f1_2f);
fluent at(key1_0,f2_2f);
fluent at(key1_1,f0_1f);
fluent at_robot(f1_2f);
fluent lock_shape(f0_0f,shape0);
fluent lock_shape(f0_0f,shape1);
fluent lock_shape(f1_0f,shape0);
fluent lock_shape(f1_0f,shape1);
fluent lock_shape(f2_0f,shape0);
fluent lock_shape(f2_0f,shape1);
fluent lock_shape(f0_1f,shape0);
fluent lock_shape(f0_1f,shape1);

%% actions ------ 

action move(f0_0f,f0_1f);
action move(f0_0f,f1_0f);
action move(f0_1f,f0_0f);
action move(f0_1f,f0_2f);
action move(f0_1f,f1_1f);
action move(f0_2f,f0_1f);
action move(f0_2f,f1_2f);
action move(f1_0f,f0_0f);
action move(f1_0f,f1_1f);
action move(f1_0f,f2_0f);
action move(f1_1f,f0_1f);
action move(f1_1f,f1_0f);
action move(f1_1f,f1_2f);
action move(f1_1f,f2_1f);
action move(f1_2f,f0_2f);
action move(f1_2f,f1_1f);
action move(f1_2f,f2_2f);
action move(f2_0f,f1_0f);
action move(f2_0f,f2_1f);
action move(f2_1f,f1_1f);
action move(f2_1f,f2_0f);
action move(f2_1f,f2_2f);
action move(f2_2f,f1_2f);
action move(f2_2f,f2_1f);
action pickup(f0_0f,key0_0);
action pickup(f0_0f,key1_0);
action pickup(f0_0f,key1_1);
action pickup(f0_1f,key0_0);
action pickup(f0_1f,key1_0);
action pickup(f0_1f,key1_1);
action pickup(f0_2f,key0_0);
action pickup(f0_2f,key1_0);
action pickup(f0_2f,key1_1);
action pickup(f1_0f,key0_0);
action pickup(f1_0f,key1_0);
action pickup(f1_0f,key1_1);
action pickup(f1_1f,key0_0);
action pickup(f1_1f,key1_0);
action pickup(f1_1f,key1_1);
action pickup(f1_2f,key0_0);
action pickup(f1_2f,key1_0);
action pickup(f1_2f,key1_1);
action pickup(f2_0f,key0_0);
action pickup(f2_0f,key1_0);
action pickup(f2_0f,key1_1);
action pickup(f2_1f,key0_0);
action pickup(f2_1f,key1_0);
action pickup(f2_1f,key1_1);
action pickup(f2_2f,key0_0);
action pickup(f2_2f,key1_0);
action pickup(f2_2f,key1_1);
action putdown(f0_0f,key0_0);
action putdown(f0_0f,key1_0);
action putdown(f0_0f,key1_1);
action putdown(f0_1f,key0_0);
action putdown(f0_1f,key1_0);
action putdown(f0_1f,key1_1);
action putdown(f0_2f,key0_0);
action putdown(f0_2f,key1_0);
action putdown(f0_2f,key1_1);
action putdown(f1_0f,key0_0);
action putdown(f1_0f,key1_0);
action putdown(f1_0f,key1_1);
action putdown(f1_1f,key0_0);
action putdown(f1_1f,key1_0);
action putdown(f1_1f,key1_1);
action putdown(f1_2f,key0_0);
action putdown(f1_2f,key1_0);
action putdown(f1_2f,key1_1);
action putdown(f2_0f,key0_0);
action putdown(f2_0f,key1_0);
action putdown(f2_0f,key1_1);
action putdown(f2_1f,key0_0);
action putdown(f2_1f,key1_0);
action putdown(f2_1f,key1_1);
action putdown(f2_2f,key0_0);
action putdown(f2_2f,key1_0);
action putdown(f2_2f,key1_1);
action sense_lock_shape(f0_0f,f0_1f,shape0);
action sense_lock_shape(f0_0f,f0_1f,shape1);
action sense_lock_shape(f0_0f,f1_0f,shape0);
action sense_lock_shape(f0_0f,f1_0f,shape1);
action sense_lock_shape(f0_1f,f0_0f,shape0);
action sense_lock_shape(f0_1f,f0_0f,shape1);
action sense_lock_shape(f0_1f,f0_2f,shape0);
action sense_lock_shape(f0_1f,f0_2f,shape1);
action sense_lock_shape(f0_1f,f1_1f,shape0);
action sense_lock_shape(f0_1f,f1_1f,shape1);
action sense_lock_shape(f0_2f,f0_1f,shape0);
action sense_lock_shape(f0_2f,f0_1f,shape1);
action sense_lock_shape(f0_2f,f1_2f,shape0);
action sense_lock_shape(f0_2f,f1_2f,shape1);
action sense_lock_shape(f1_0f,f0_0f,shape0);
action sense_lock_shape(f1_0f,f0_0f,shape1);
action sense_lock_shape(f1_0f,f1_1f,shape0);
action sense_lock_shape(f1_0f,f1_1f,shape1);
action sense_lock_shape(f1_0f,f2_0f,shape0);
action sense_lock_shape(f1_0f,f2_0f,shape1);
action sense_lock_shape(f1_1f,f0_1f,shape0);
action sense_lock_shape(f1_1f,f0_1f,shape1);
action sense_lock_shape(f1_1f,f1_0f,shape0);
action sense_lock_shape(f1_1f,f1_0f,shape1);
action sense_lock_shape(f1_1f,f1_2f,shape0);
action sense_lock_shape(f1_1f,f1_2f,shape1);
action sense_lock_shape(f1_1f,f2_1f,shape0);
action sense_lock_shape(f1_1f,f2_1f,shape1);
action sense_lock_shape(f1_2f,f0_2f,shape0);
action sense_lock_shape(f1_2f,f0_2f,shape1);
action sense_lock_shape(f1_2f,f1_1f,shape0);
action sense_lock_shape(f1_2f,f1_1f,shape1);
action sense_lock_shape(f1_2f,f2_2f,shape0);
action sense_lock_shape(f1_2f,f2_2f,shape1);
action sense_lock_shape(f2_0f,f1_0f,shape0);
action sense_lock_shape(f2_0f,f1_0f,shape1);
action sense_lock_shape(f2_0f,f2_1f,shape0);
action sense_lock_shape(f2_0f,f2_1f,shape1);
action sense_lock_shape(f2_1f,f1_1f,shape0);
action sense_lock_shape(f2_1f,f1_1f,shape1);
action sense_lock_shape(f2_1f,f2_0f,shape0);
action sense_lock_shape(f2_1f,f2_0f,shape1);
action sense_lock_shape(f2_1f,f2_2f,shape0);
action sense_lock_shape(f2_1f,f2_2f,shape1);
action sense_lock_shape(f2_2f,f1_2f,shape0);
action sense_lock_shape(f2_2f,f1_2f,shape1);
action sense_lock_shape(f2_2f,f2_1f,shape0);
action sense_lock_shape(f2_2f,f2_1f,shape1);
action unlock(f0_0f,f0_1f,key0_0,shape0);
action unlock(f0_0f,f0_1f,key1_0,shape1);
action unlock(f0_0f,f0_1f,key1_1,shape1);
action unlock(f0_0f,f1_0f,key0_0,shape0);
action unlock(f0_0f,f1_0f,key1_0,shape1);
action unlock(f0_0f,f1_0f,key1_1,shape1);
action unlock(f0_1f,f0_0f,key0_0,shape0);
action unlock(f0_1f,f0_0f,key1_0,shape1);
action unlock(f0_1f,f0_0f,key1_1,shape1);
action unlock(f0_1f,f0_2f,key0_0,shape0);
action unlock(f0_1f,f0_2f,key1_0,shape1);
action unlock(f0_1f,f0_2f,key1_1,shape1);
action unlock(f0_1f,f1_1f,key0_0,shape0);
action unlock(f0_1f,f1_1f,key1_0,shape1);
action unlock(f0_1f,f1_1f,key1_1,shape1);
action unlock(f0_2f,f0_1f,key0_0,shape0);
action unlock(f0_2f,f0_1f,key1_0,shape1);
action unlock(f0_2f,f0_1f,key1_1,shape1);
action unlock(f0_2f,f1_2f,key0_0,shape0);
action unlock(f0_2f,f1_2f,key1_0,shape1);
action unlock(f0_2f,f1_2f,key1_1,shape1);
action unlock(f1_0f,f0_0f,key0_0,shape0);
action unlock(f1_0f,f0_0f,key1_0,shape1);
action unlock(f1_0f,f0_0f,key1_1,shape1);
action unlock(f1_0f,f1_1f,key0_0,shape0);
action unlock(f1_0f,f1_1f,key1_0,shape1);
action unlock(f1_0f,f1_1f,key1_1,shape1);
action unlock(f1_0f,f2_0f,key0_0,shape0);
action unlock(f1_0f,f2_0f,key1_0,shape1);
action unlock(f1_0f,f2_0f,key1_1,shape1);
action unlock(f1_1f,f0_1f,key0_0,shape0);
action unlock(f1_1f,f0_1f,key1_0,shape1);
action unlock(f1_1f,f0_1f,key1_1,shape1);
action unlock(f1_1f,f1_0f,key0_0,shape0);
action unlock(f1_1f,f1_0f,key1_0,shape1);
action unlock(f1_1f,f1_0f,key1_1,shape1);
action unlock(f1_1f,f1_2f,key0_0,shape0);
action unlock(f1_1f,f1_2f,key1_0,shape1);
action unlock(f1_1f,f1_2f,key1_1,shape1);
action unlock(f1_1f,f2_1f,key0_0,shape0);
action unlock(f1_1f,f2_1f,key1_0,shape1);
action unlock(f1_1f,f2_1f,key1_1,shape1);
action unlock(f1_2f,f0_2f,key0_0,shape0);
action unlock(f1_2f,f0_2f,key1_0,shape1);
action unlock(f1_2f,f0_2f,key1_1,shape1);
action unlock(f1_2f,f1_1f,key0_0,shape0);
action unlock(f1_2f,f1_1f,key1_0,shape1);
action unlock(f1_2f,f1_1f,key1_1,shape1);
action unlock(f1_2f,f2_2f,key0_0,shape0);
action unlock(f1_2f,f2_2f,key1_0,shape1);
action unlock(f1_2f,f2_2f,key1_1,shape1);
action unlock(f2_0f,f1_0f,key0_0,shape0);
action unlock(f2_0f,f1_0f,key1_0,shape1);
action unlock(f2_0f,f1_0f,key1_1,shape1);
action unlock(f2_0f,f2_1f,key0_0,shape0);
action unlock(f2_0f,f2_1f,key1_0,shape1);
action unlock(f2_0f,f2_1f,key1_1,shape1);
action unlock(f2_1f,f1_1f,key0_0,shape0);
action unlock(f2_1f,f1_1f,key1_0,shape1);
action unlock(f2_1f,f1_1f,key1_1,shape1);
action unlock(f2_1f,f2_0f,key0_0,shape0);
action unlock(f2_1f,f2_0f,key1_0,shape1);
action unlock(f2_1f,f2_0f,key1_1,shape1);
action unlock(f2_1f,f2_2f,key0_0,shape0);
action unlock(f2_1f,f2_2f,key1_0,shape1);
action unlock(f2_1f,f2_2f,key1_1,shape1);
action unlock(f2_2f,f1_2f,key0_0,shape0);
action unlock(f2_2f,f1_2f,key1_0,shape1);
action unlock(f2_2f,f1_2f,key1_1,shape1);
action unlock(f2_2f,f2_1f,key0_0,shape0);
action unlock(f2_2f,f2_1f,key1_0,shape1);
action unlock(f2_2f,f2_1f,key1_1,shape1);

%% executable ------ 

executable move(f0_0f,f0_1f) if  at_robot(f0_0f), open(f0_1f);
executable move(f0_0f,f1_0f) if  at_robot(f0_0f), open(f1_0f);
executable move(f0_1f,f0_0f) if  at_robot(f0_1f), open(f0_0f);
executable move(f0_1f,f0_2f) if  at_robot(f0_1f);
executable move(f0_1f,f1_1f) if  at_robot(f0_1f);
executable move(f0_2f,f0_1f) if  at_robot(f0_2f), open(f0_1f);
executable move(f0_2f,f1_2f) if  at_robot(f0_2f);
executable move(f1_0f,f0_0f) if  at_robot(f1_0f), open(f0_0f);
executable move(f1_0f,f1_1f) if  at_robot(f1_0f);
executable move(f1_0f,f2_0f) if  at_robot(f1_0f), open(f2_0f);
executable move(f1_1f,f0_1f) if  at_robot(f1_1f), open(f0_1f);
executable move(f1_1f,f1_0f) if  at_robot(f1_1f), open(f1_0f);
executable move(f1_1f,f1_2f) if  at_robot(f1_1f);
executable move(f1_1f,f2_1f) if  at_robot(f1_1f);
executable move(f1_2f,f0_2f) if  at_robot(f1_2f);
executable move(f1_2f,f1_1f) if  at_robot(f1_2f);
executable move(f1_2f,f2_2f) if  at_robot(f1_2f);
executable move(f2_0f,f1_0f) if  at_robot(f2_0f), open(f1_0f);
executable move(f2_0f,f2_1f) if  at_robot(f2_0f);
executable move(f2_1f,f1_1f) if  at_robot(f2_1f);
executable move(f2_1f,f2_0f) if  at_robot(f2_1f), open(f2_0f);
executable move(f2_1f,f2_2f) if  at_robot(f2_1f);
executable move(f2_2f,f1_2f) if  at_robot(f2_2f);
executable move(f2_2f,f2_1f) if  at_robot(f2_2f);
executable pickup(f0_0f,key0_0) if  at_robot(f0_0f), at(key0_0,f0_0f), arm_empty;
executable pickup(f0_0f,key1_0) if  at_robot(f0_0f), at(key1_0,f0_0f), arm_empty;
executable pickup(f0_0f,key1_1) if  at_robot(f0_0f), at(key1_1,f0_0f), arm_empty;
executable pickup(f0_1f,key0_0) if  at_robot(f0_1f), at(key0_0,f0_1f), arm_empty;
executable pickup(f0_1f,key1_0) if  at_robot(f0_1f), at(key1_0,f0_1f), arm_empty;
executable pickup(f0_1f,key1_1) if  at_robot(f0_1f), at(key1_1,f0_1f), arm_empty;
executable pickup(f0_2f,key0_0) if  at_robot(f0_2f), at(key0_0,f0_2f), arm_empty;
executable pickup(f0_2f,key1_0) if  at_robot(f0_2f), at(key1_0,f0_2f), arm_empty;
executable pickup(f0_2f,key1_1) if  at_robot(f0_2f), at(key1_1,f0_2f), arm_empty;
executable pickup(f1_0f,key0_0) if  at_robot(f1_0f), at(key0_0,f1_0f), arm_empty;
executable pickup(f1_0f,key1_0) if  at_robot(f1_0f), at(key1_0,f1_0f), arm_empty;
executable pickup(f1_0f,key1_1) if  at_robot(f1_0f), at(key1_1,f1_0f), arm_empty;
executable pickup(f1_1f,key0_0) if  at_robot(f1_1f), at(key0_0,f1_1f), arm_empty;
executable pickup(f1_1f,key1_0) if  at_robot(f1_1f), at(key1_0,f1_1f), arm_empty;
executable pickup(f1_1f,key1_1) if  at_robot(f1_1f), at(key1_1,f1_1f), arm_empty;
executable pickup(f1_2f,key0_0) if  at_robot(f1_2f), at(key0_0,f1_2f), arm_empty;
executable pickup(f1_2f,key1_0) if  at_robot(f1_2f), at(key1_0,f1_2f), arm_empty;
executable pickup(f1_2f,key1_1) if  at_robot(f1_2f), at(key1_1,f1_2f), arm_empty;
executable pickup(f2_0f,key0_0) if  at_robot(f2_0f), at(key0_0,f2_0f), arm_empty;
executable pickup(f2_0f,key1_0) if  at_robot(f2_0f), at(key1_0,f2_0f), arm_empty;
executable pickup(f2_0f,key1_1) if  at_robot(f2_0f), at(key1_1,f2_0f), arm_empty;
executable pickup(f2_1f,key0_0) if  at_robot(f2_1f), at(key0_0,f2_1f), arm_empty;
executable pickup(f2_1f,key1_0) if  at_robot(f2_1f), at(key1_0,f2_1f), arm_empty;
executable pickup(f2_1f,key1_1) if  at_robot(f2_1f), at(key1_1,f2_1f), arm_empty;
executable pickup(f2_2f,key0_0) if  at_robot(f2_2f), at(key0_0,f2_2f), arm_empty;
executable pickup(f2_2f,key1_0) if  at_robot(f2_2f), at(key1_0,f2_2f), arm_empty;
executable pickup(f2_2f,key1_1) if  at_robot(f2_2f), at(key1_1,f2_2f), arm_empty;
executable putdown(f0_0f,key0_0) if  at_robot(f0_0f), holding(key0_0);
executable putdown(f0_0f,key1_0) if  at_robot(f0_0f), holding(key1_0);
executable putdown(f0_0f,key1_1) if  at_robot(f0_0f), holding(key1_1);
executable putdown(f0_1f,key0_0) if  at_robot(f0_1f), holding(key0_0);
executable putdown(f0_1f,key1_0) if  at_robot(f0_1f), holding(key1_0);
executable putdown(f0_1f,key1_1) if  at_robot(f0_1f), holding(key1_1);
executable putdown(f0_2f,key0_0) if  at_robot(f0_2f), holding(key0_0);
executable putdown(f0_2f,key1_0) if  at_robot(f0_2f), holding(key1_0);
executable putdown(f0_2f,key1_1) if  at_robot(f0_2f), holding(key1_1);
executable putdown(f1_0f,key0_0) if  at_robot(f1_0f), holding(key0_0);
executable putdown(f1_0f,key1_0) if  at_robot(f1_0f), holding(key1_0);
executable putdown(f1_0f,key1_1) if  at_robot(f1_0f), holding(key1_1);
executable putdown(f1_1f,key0_0) if  at_robot(f1_1f), holding(key0_0);
executable putdown(f1_1f,key1_0) if  at_robot(f1_1f), holding(key1_0);
executable putdown(f1_1f,key1_1) if  at_robot(f1_1f), holding(key1_1);
executable putdown(f1_2f,key0_0) if  at_robot(f1_2f), holding(key0_0);
executable putdown(f1_2f,key1_0) if  at_robot(f1_2f), holding(key1_0);
executable putdown(f1_2f,key1_1) if  at_robot(f1_2f), holding(key1_1);
executable putdown(f2_0f,key0_0) if  at_robot(f2_0f), holding(key0_0);
executable putdown(f2_0f,key1_0) if  at_robot(f2_0f), holding(key1_0);
executable putdown(f2_0f,key1_1) if  at_robot(f2_0f), holding(key1_1);
executable putdown(f2_1f,key0_0) if  at_robot(f2_1f), holding(key0_0);
executable putdown(f2_1f,key1_0) if  at_robot(f2_1f), holding(key1_0);
executable putdown(f2_1f,key1_1) if  at_robot(f2_1f), holding(key1_1);
executable putdown(f2_2f,key0_0) if  at_robot(f2_2f), holding(key0_0);
executable putdown(f2_2f,key1_0) if  at_robot(f2_2f), holding(key1_0);
executable putdown(f2_2f,key1_1) if  at_robot(f2_2f), holding(key1_1);
executable sense_lock_shape(f0_0f,f0_1f,shape0) if  at_robot(f0_0f);
executable sense_lock_shape(f0_0f,f0_1f,shape1) if  at_robot(f0_0f);
executable sense_lock_shape(f0_0f,f1_0f,shape0) if  at_robot(f0_0f);
executable sense_lock_shape(f0_0f,f1_0f,shape1) if  at_robot(f0_0f);
executable sense_lock_shape(f0_1f,f0_0f,shape0) if  at_robot(f0_1f);
executable sense_lock_shape(f0_1f,f0_0f,shape1) if  at_robot(f0_1f);
executable sense_lock_shape(f0_1f,f0_2f,shape0) if  at_robot(f0_1f);
executable sense_lock_shape(f0_1f,f0_2f,shape1) if  at_robot(f0_1f);
executable sense_lock_shape(f0_1f,f1_1f,shape0) if  at_robot(f0_1f);
executable sense_lock_shape(f0_1f,f1_1f,shape1) if  at_robot(f0_1f);
executable sense_lock_shape(f0_2f,f0_1f,shape0) if  at_robot(f0_2f);
executable sense_lock_shape(f0_2f,f0_1f,shape1) if  at_robot(f0_2f);
executable sense_lock_shape(f0_2f,f1_2f,shape0) if  at_robot(f0_2f);
executable sense_lock_shape(f0_2f,f1_2f,shape1) if  at_robot(f0_2f);
executable sense_lock_shape(f1_0f,f0_0f,shape0) if  at_robot(f1_0f);
executable sense_lock_shape(f1_0f,f0_0f,shape1) if  at_robot(f1_0f);
executable sense_lock_shape(f1_0f,f1_1f,shape0) if  at_robot(f1_0f);
executable sense_lock_shape(f1_0f,f1_1f,shape1) if  at_robot(f1_0f);
executable sense_lock_shape(f1_0f,f2_0f,shape0) if  at_robot(f1_0f);
executable sense_lock_shape(f1_0f,f2_0f,shape1) if  at_robot(f1_0f);
executable sense_lock_shape(f1_1f,f0_1f,shape0) if  at_robot(f1_1f);
executable sense_lock_shape(f1_1f,f0_1f,shape1) if  at_robot(f1_1f);
executable sense_lock_shape(f1_1f,f1_0f,shape0) if  at_robot(f1_1f);
executable sense_lock_shape(f1_1f,f1_0f,shape1) if  at_robot(f1_1f);
executable sense_lock_shape(f1_1f,f1_2f,shape0) if  at_robot(f1_1f);
executable sense_lock_shape(f1_1f,f1_2f,shape1) if  at_robot(f1_1f);
executable sense_lock_shape(f1_1f,f2_1f,shape0) if  at_robot(f1_1f);
executable sense_lock_shape(f1_1f,f2_1f,shape1) if  at_robot(f1_1f);
executable sense_lock_shape(f1_2f,f0_2f,shape0) if  at_robot(f1_2f);
executable sense_lock_shape(f1_2f,f0_2f,shape1) if  at_robot(f1_2f);
executable sense_lock_shape(f1_2f,f1_1f,shape0) if  at_robot(f1_2f);
executable sense_lock_shape(f1_2f,f1_1f,shape1) if  at_robot(f1_2f);
executable sense_lock_shape(f1_2f,f2_2f,shape0) if  at_robot(f1_2f);
executable sense_lock_shape(f1_2f,f2_2f,shape1) if  at_robot(f1_2f);
executable sense_lock_shape(f2_0f,f1_0f,shape0) if  at_robot(f2_0f);
executable sense_lock_shape(f2_0f,f1_0f,shape1) if  at_robot(f2_0f);
executable sense_lock_shape(f2_0f,f2_1f,shape0) if  at_robot(f2_0f);
executable sense_lock_shape(f2_0f,f2_1f,shape1) if  at_robot(f2_0f);
executable sense_lock_shape(f2_1f,f1_1f,shape0) if  at_robot(f2_1f);
executable sense_lock_shape(f2_1f,f1_1f,shape1) if  at_robot(f2_1f);
executable sense_lock_shape(f2_1f,f2_0f,shape0) if  at_robot(f2_1f);
executable sense_lock_shape(f2_1f,f2_0f,shape1) if  at_robot(f2_1f);
executable sense_lock_shape(f2_1f,f2_2f,shape0) if  at_robot(f2_1f);
executable sense_lock_shape(f2_1f,f2_2f,shape1) if  at_robot(f2_1f);
executable sense_lock_shape(f2_2f,f1_2f,shape0) if  at_robot(f2_2f);
executable sense_lock_shape(f2_2f,f1_2f,shape1) if  at_robot(f2_2f);
executable sense_lock_shape(f2_2f,f2_1f,shape0) if  at_robot(f2_2f);
executable sense_lock_shape(f2_2f,f2_1f,shape1) if  at_robot(f2_2f);
executable unlock(f0_0f,f0_1f,key0_0,shape0) if  at_robot(f0_0f), holding(key0_0);
executable unlock(f0_0f,f0_1f,key1_0,shape1) if  at_robot(f0_0f), holding(key1_0);
executable unlock(f0_0f,f0_1f,key1_1,shape1) if  at_robot(f0_0f), holding(key1_1);
executable unlock(f0_0f,f1_0f,key0_0,shape0) if  at_robot(f0_0f), holding(key0_0);
executable unlock(f0_0f,f1_0f,key1_0,shape1) if  at_robot(f0_0f), holding(key1_0);
executable unlock(f0_0f,f1_0f,key1_1,shape1) if  at_robot(f0_0f), holding(key1_1);
executable unlock(f0_1f,f0_0f,key0_0,shape0) if  at_robot(f0_1f), holding(key0_0);
executable unlock(f0_1f,f0_0f,key1_0,shape1) if  at_robot(f0_1f), holding(key1_0);
executable unlock(f0_1f,f0_0f,key1_1,shape1) if  at_robot(f0_1f), holding(key1_1);
executable unlock(f0_1f,f0_2f,key0_0,shape0) if  at_robot(f0_1f), holding(key0_0);
executable unlock(f0_1f,f0_2f,key1_0,shape1) if  at_robot(f0_1f), holding(key1_0);
executable unlock(f0_1f,f0_2f,key1_1,shape1) if  at_robot(f0_1f), holding(key1_1);
executable unlock(f0_1f,f1_1f,key0_0,shape0) if  at_robot(f0_1f), holding(key0_0);
executable unlock(f0_1f,f1_1f,key1_0,shape1) if  at_robot(f0_1f), holding(key1_0);
executable unlock(f0_1f,f1_1f,key1_1,shape1) if  at_robot(f0_1f), holding(key1_1);
executable unlock(f0_2f,f0_1f,key0_0,shape0) if  at_robot(f0_2f), holding(key0_0);
executable unlock(f0_2f,f0_1f,key1_0,shape1) if  at_robot(f0_2f), holding(key1_0);
executable unlock(f0_2f,f0_1f,key1_1,shape1) if  at_robot(f0_2f), holding(key1_1);
executable unlock(f0_2f,f1_2f,key0_0,shape0) if  at_robot(f0_2f), holding(key0_0);
executable unlock(f0_2f,f1_2f,key1_0,shape1) if  at_robot(f0_2f), holding(key1_0);
executable unlock(f0_2f,f1_2f,key1_1,shape1) if  at_robot(f0_2f), holding(key1_1);
executable unlock(f1_0f,f0_0f,key0_0,shape0) if  at_robot(f1_0f), holding(key0_0);
executable unlock(f1_0f,f0_0f,key1_0,shape1) if  at_robot(f1_0f), holding(key1_0);
executable unlock(f1_0f,f0_0f,key1_1,shape1) if  at_robot(f1_0f), holding(key1_1);
executable unlock(f1_0f,f1_1f,key0_0,shape0) if  at_robot(f1_0f), holding(key0_0);
executable unlock(f1_0f,f1_1f,key1_0,shape1) if  at_robot(f1_0f), holding(key1_0);
executable unlock(f1_0f,f1_1f,key1_1,shape1) if  at_robot(f1_0f), holding(key1_1);
executable unlock(f1_0f,f2_0f,key0_0,shape0) if  at_robot(f1_0f), holding(key0_0);
executable unlock(f1_0f,f2_0f,key1_0,shape1) if  at_robot(f1_0f), holding(key1_0);
executable unlock(f1_0f,f2_0f,key1_1,shape1) if  at_robot(f1_0f), holding(key1_1);
executable unlock(f1_1f,f0_1f,key0_0,shape0) if  at_robot(f1_1f), holding(key0_0);
executable unlock(f1_1f,f0_1f,key1_0,shape1) if  at_robot(f1_1f), holding(key1_0);
executable unlock(f1_1f,f0_1f,key1_1,shape1) if  at_robot(f1_1f), holding(key1_1);
executable unlock(f1_1f,f1_0f,key0_0,shape0) if  at_robot(f1_1f), holding(key0_0);
executable unlock(f1_1f,f1_0f,key1_0,shape1) if  at_robot(f1_1f), holding(key1_0);
executable unlock(f1_1f,f1_0f,key1_1,shape1) if  at_robot(f1_1f), holding(key1_1);
executable unlock(f1_1f,f1_2f,key0_0,shape0) if  at_robot(f1_1f), holding(key0_0);
executable unlock(f1_1f,f1_2f,key1_0,shape1) if  at_robot(f1_1f), holding(key1_0);
executable unlock(f1_1f,f1_2f,key1_1,shape1) if  at_robot(f1_1f), holding(key1_1);
executable unlock(f1_1f,f2_1f,key0_0,shape0) if  at_robot(f1_1f), holding(key0_0);
executable unlock(f1_1f,f2_1f,key1_0,shape1) if  at_robot(f1_1f), holding(key1_0);
executable unlock(f1_1f,f2_1f,key1_1,shape1) if  at_robot(f1_1f), holding(key1_1);
executable unlock(f1_2f,f0_2f,key0_0,shape0) if  at_robot(f1_2f), holding(key0_0);
executable unlock(f1_2f,f0_2f,key1_0,shape1) if  at_robot(f1_2f), holding(key1_0);
executable unlock(f1_2f,f0_2f,key1_1,shape1) if  at_robot(f1_2f), holding(key1_1);
executable unlock(f1_2f,f1_1f,key0_0,shape0) if  at_robot(f1_2f), holding(key0_0);
executable unlock(f1_2f,f1_1f,key1_0,shape1) if  at_robot(f1_2f), holding(key1_0);
executable unlock(f1_2f,f1_1f,key1_1,shape1) if  at_robot(f1_2f), holding(key1_1);
executable unlock(f1_2f,f2_2f,key0_0,shape0) if  at_robot(f1_2f), holding(key0_0);
executable unlock(f1_2f,f2_2f,key1_0,shape1) if  at_robot(f1_2f), holding(key1_0);
executable unlock(f1_2f,f2_2f,key1_1,shape1) if  at_robot(f1_2f), holding(key1_1);
executable unlock(f2_0f,f1_0f,key0_0,shape0) if  at_robot(f2_0f), holding(key0_0);
executable unlock(f2_0f,f1_0f,key1_0,shape1) if  at_robot(f2_0f), holding(key1_0);
executable unlock(f2_0f,f1_0f,key1_1,shape1) if  at_robot(f2_0f), holding(key1_1);
executable unlock(f2_0f,f2_1f,key0_0,shape0) if  at_robot(f2_0f), holding(key0_0);
executable unlock(f2_0f,f2_1f,key1_0,shape1) if  at_robot(f2_0f), holding(key1_0);
executable unlock(f2_0f,f2_1f,key1_1,shape1) if  at_robot(f2_0f), holding(key1_1);
executable unlock(f2_1f,f1_1f,key0_0,shape0) if  at_robot(f2_1f), holding(key0_0);
executable unlock(f2_1f,f1_1f,key1_0,shape1) if  at_robot(f2_1f), holding(key1_0);
executable unlock(f2_1f,f1_1f,key1_1,shape1) if  at_robot(f2_1f), holding(key1_1);
executable unlock(f2_1f,f2_0f,key0_0,shape0) if  at_robot(f2_1f), holding(key0_0);
executable unlock(f2_1f,f2_0f,key1_0,shape1) if  at_robot(f2_1f), holding(key1_0);
executable unlock(f2_1f,f2_0f,key1_1,shape1) if  at_robot(f2_1f), holding(key1_1);
executable unlock(f2_1f,f2_2f,key0_0,shape0) if  at_robot(f2_1f), holding(key0_0);
executable unlock(f2_1f,f2_2f,key1_0,shape1) if  at_robot(f2_1f), holding(key1_0);
executable unlock(f2_1f,f2_2f,key1_1,shape1) if  at_robot(f2_1f), holding(key1_1);
executable unlock(f2_2f,f1_2f,key0_0,shape0) if  at_robot(f2_2f), holding(key0_0);
executable unlock(f2_2f,f1_2f,key1_0,shape1) if  at_robot(f2_2f), holding(key1_0);
executable unlock(f2_2f,f1_2f,key1_1,shape1) if  at_robot(f2_2f), holding(key1_1);
executable unlock(f2_2f,f2_1f,key0_0,shape0) if  at_robot(f2_2f), holding(key0_0);
executable unlock(f2_2f,f2_1f,key1_0,shape1) if  at_robot(f2_2f), holding(key1_0);
executable unlock(f2_2f,f2_1f,key1_1,shape1) if  at_robot(f2_2f), holding(key1_1);

%% effects ------ 

move(f0_0f,f0_1f) causes  at_robot(f0_1f), -at_robot(f0_0f);
move(f0_0f,f1_0f) causes  at_robot(f1_0f), -at_robot(f0_0f);
move(f0_1f,f0_0f) causes  at_robot(f0_0f), -at_robot(f0_1f);
move(f0_1f,f0_2f) causes  at_robot(f0_2f), -at_robot(f0_1f);
move(f0_1f,f1_1f) causes  at_robot(f1_1f), -at_robot(f0_1f);
move(f0_2f,f0_1f) causes  at_robot(f0_1f), -at_robot(f0_2f);
move(f0_2f,f1_2f) causes  at_robot(f1_2f), -at_robot(f0_2f);
move(f1_0f,f0_0f) causes  at_robot(f0_0f), -at_robot(f1_0f);
move(f1_0f,f1_1f) causes  at_robot(f1_1f), -at_robot(f1_0f);
move(f1_0f,f2_0f) causes  at_robot(f2_0f), -at_robot(f1_0f);
move(f1_1f,f0_1f) causes  at_robot(f0_1f), -at_robot(f1_1f);
move(f1_1f,f1_0f) causes  at_robot(f1_0f), -at_robot(f1_1f);
move(f1_1f,f1_2f) causes  at_robot(f1_2f), -at_robot(f1_1f);
move(f1_1f,f2_1f) causes  at_robot(f2_1f), -at_robot(f1_1f);
move(f1_2f,f0_2f) causes  at_robot(f0_2f), -at_robot(f1_2f);
move(f1_2f,f1_1f) causes  at_robot(f1_1f), -at_robot(f1_2f);
move(f1_2f,f2_2f) causes  at_robot(f2_2f), -at_robot(f1_2f);
move(f2_0f,f1_0f) causes  at_robot(f1_0f), -at_robot(f2_0f);
move(f2_0f,f2_1f) causes  at_robot(f2_1f), -at_robot(f2_0f);
move(f2_1f,f1_1f) causes  at_robot(f1_1f), -at_robot(f2_1f);
move(f2_1f,f2_0f) causes  at_robot(f2_0f), -at_robot(f2_1f);
move(f2_1f,f2_2f) causes  at_robot(f2_2f), -at_robot(f2_1f);
move(f2_2f,f1_2f) causes  at_robot(f1_2f), -at_robot(f2_2f);
move(f2_2f,f2_1f) causes  at_robot(f2_1f), -at_robot(f2_2f);
pickup(f0_0f,key0_0) causes  holding(key0_0), -at(key0_0,f0_0f), -arm_empty;
pickup(f0_0f,key1_0) causes  holding(key1_0), -at(key1_0,f0_0f), -arm_empty;
pickup(f0_0f,key1_1) causes  holding(key1_1), -at(key1_1,f0_0f), -arm_empty;
pickup(f0_1f,key0_0) causes  holding(key0_0), -at(key0_0,f0_1f), -arm_empty;
pickup(f0_1f,key1_0) causes  holding(key1_0), -at(key1_0,f0_1f), -arm_empty;
pickup(f0_1f,key1_1) causes  holding(key1_1), -at(key1_1,f0_1f), -arm_empty;
pickup(f0_2f,key0_0) causes  holding(key0_0), -at(key0_0,f0_2f), -arm_empty;
pickup(f0_2f,key1_0) causes  holding(key1_0), -at(key1_0,f0_2f), -arm_empty;
pickup(f0_2f,key1_1) causes  holding(key1_1), -at(key1_1,f0_2f), -arm_empty;
pickup(f1_0f,key0_0) causes  holding(key0_0), -at(key0_0,f1_0f), -arm_empty;
pickup(f1_0f,key1_0) causes  holding(key1_0), -at(key1_0,f1_0f), -arm_empty;
pickup(f1_0f,key1_1) causes  holding(key1_1), -at(key1_1,f1_0f), -arm_empty;
pickup(f1_1f,key0_0) causes  holding(key0_0), -at(key0_0,f1_1f), -arm_empty;
pickup(f1_1f,key1_0) causes  holding(key1_0), -at(key1_0,f1_1f), -arm_empty;
pickup(f1_1f,key1_1) causes  holding(key1_1), -at(key1_1,f1_1f), -arm_empty;
pickup(f1_2f,key0_0) causes  holding(key0_0), -at(key0_0,f1_2f), -arm_empty;
pickup(f1_2f,key1_0) causes  holding(key1_0), -at(key1_0,f1_2f), -arm_empty;
pickup(f1_2f,key1_1) causes  holding(key1_1), -at(key1_1,f1_2f), -arm_empty;
pickup(f2_0f,key0_0) causes  holding(key0_0), -at(key0_0,f2_0f), -arm_empty;
pickup(f2_0f,key1_0) causes  holding(key1_0), -at(key1_0,f2_0f), -arm_empty;
pickup(f2_0f,key1_1) causes  holding(key1_1), -at(key1_1,f2_0f), -arm_empty;
pickup(f2_1f,key0_0) causes  holding(key0_0), -at(key0_0,f2_1f), -arm_empty;
pickup(f2_1f,key1_0) causes  holding(key1_0), -at(key1_0,f2_1f), -arm_empty;
pickup(f2_1f,key1_1) causes  holding(key1_1), -at(key1_1,f2_1f), -arm_empty;
pickup(f2_2f,key0_0) causes  holding(key0_0), -at(key0_0,f2_2f), -arm_empty;
pickup(f2_2f,key1_0) causes  holding(key1_0), -at(key1_0,f2_2f), -arm_empty;
pickup(f2_2f,key1_1) causes  holding(key1_1), -at(key1_1,f2_2f), -arm_empty;
putdown(f0_0f,key0_0) causes  arm_empty, at(key0_0,f0_0f), -holding(key0_0);
putdown(f0_0f,key1_0) causes  arm_empty, at(key1_0,f0_0f), -holding(key1_0);
putdown(f0_0f,key1_1) causes  arm_empty, at(key1_1,f0_0f), -holding(key1_1);
putdown(f0_1f,key0_0) causes  arm_empty, at(key0_0,f0_1f), -holding(key0_0);
putdown(f0_1f,key1_0) causes  arm_empty, at(key1_0,f0_1f), -holding(key1_0);
putdown(f0_1f,key1_1) causes  arm_empty, at(key1_1,f0_1f), -holding(key1_1);
putdown(f0_2f,key0_0) causes  arm_empty, at(key0_0,f0_2f), -holding(key0_0);
putdown(f0_2f,key1_0) causes  arm_empty, at(key1_0,f0_2f), -holding(key1_0);
putdown(f0_2f,key1_1) causes  arm_empty, at(key1_1,f0_2f), -holding(key1_1);
putdown(f1_0f,key0_0) causes  arm_empty, at(key0_0,f1_0f), -holding(key0_0);
putdown(f1_0f,key1_0) causes  arm_empty, at(key1_0,f1_0f), -holding(key1_0);
putdown(f1_0f,key1_1) causes  arm_empty, at(key1_1,f1_0f), -holding(key1_1);
putdown(f1_1f,key0_0) causes  arm_empty, at(key0_0,f1_1f), -holding(key0_0);
putdown(f1_1f,key1_0) causes  arm_empty, at(key1_0,f1_1f), -holding(key1_0);
putdown(f1_1f,key1_1) causes  arm_empty, at(key1_1,f1_1f), -holding(key1_1);
putdown(f1_2f,key0_0) causes  arm_empty, at(key0_0,f1_2f), -holding(key0_0);
putdown(f1_2f,key1_0) causes  arm_empty, at(key1_0,f1_2f), -holding(key1_0);
putdown(f1_2f,key1_1) causes  arm_empty, at(key1_1,f1_2f), -holding(key1_1);
putdown(f2_0f,key0_0) causes  arm_empty, at(key0_0,f2_0f), -holding(key0_0);
putdown(f2_0f,key1_0) causes  arm_empty, at(key1_0,f2_0f), -holding(key1_0);
putdown(f2_0f,key1_1) causes  arm_empty, at(key1_1,f2_0f), -holding(key1_1);
putdown(f2_1f,key0_0) causes  arm_empty, at(key0_0,f2_1f), -holding(key0_0);
putdown(f2_1f,key1_0) causes  arm_empty, at(key1_0,f2_1f), -holding(key1_0);
putdown(f2_1f,key1_1) causes  arm_empty, at(key1_1,f2_1f), -holding(key1_1);
putdown(f2_2f,key0_0) causes  arm_empty, at(key0_0,f2_2f), -holding(key0_0);
putdown(f2_2f,key1_0) causes  arm_empty, at(key1_0,f2_2f), -holding(key1_0);
putdown(f2_2f,key1_1) causes  arm_empty, at(key1_1,f2_2f), -holding(key1_1);
sense_lock_shape(f0_0f,f0_1f,shape0) causes  lock_shape(f0_1f,shape0);
sense_lock_shape(f0_0f,f0_1f,shape1) causes  lock_shape(f0_1f,shape1);
sense_lock_shape(f0_0f,f1_0f,shape0) causes  lock_shape(f1_0f,shape0);
sense_lock_shape(f0_0f,f1_0f,shape1) causes  lock_shape(f1_0f,shape1);
sense_lock_shape(f0_1f,f0_0f,shape0) causes  lock_shape(f0_0f,shape0);
sense_lock_shape(f0_1f,f0_0f,shape1) causes  lock_shape(f0_0f,shape1);
sense_lock_shape(f0_1f,f0_2f,shape0) causes  lock_shape(f0_2f,shape0);
sense_lock_shape(f0_1f,f0_2f,shape1) causes  lock_shape(f0_2f,shape1);
sense_lock_shape(f0_1f,f1_1f,shape0) causes  lock_shape(f1_1f,shape0);
sense_lock_shape(f0_1f,f1_1f,shape1) causes  lock_shape(f1_1f,shape1);
sense_lock_shape(f0_2f,f0_1f,shape0) causes  lock_shape(f0_1f,shape0);
sense_lock_shape(f0_2f,f0_1f,shape1) causes  lock_shape(f0_1f,shape1);
sense_lock_shape(f0_2f,f1_2f,shape0) causes  lock_shape(f1_2f,shape0);
sense_lock_shape(f0_2f,f1_2f,shape1) causes  lock_shape(f1_2f,shape1);
sense_lock_shape(f1_0f,f0_0f,shape0) causes  lock_shape(f0_0f,shape0);
sense_lock_shape(f1_0f,f0_0f,shape1) causes  lock_shape(f0_0f,shape1);
sense_lock_shape(f1_0f,f1_1f,shape0) causes  lock_shape(f1_1f,shape0);
sense_lock_shape(f1_0f,f1_1f,shape1) causes  lock_shape(f1_1f,shape1);
sense_lock_shape(f1_0f,f2_0f,shape0) causes  lock_shape(f2_0f,shape0);
sense_lock_shape(f1_0f,f2_0f,shape1) causes  lock_shape(f2_0f,shape1);
sense_lock_shape(f1_1f,f0_1f,shape0) causes  lock_shape(f0_1f,shape0);
sense_lock_shape(f1_1f,f0_1f,shape1) causes  lock_shape(f0_1f,shape1);
sense_lock_shape(f1_1f,f1_0f,shape0) causes  lock_shape(f1_0f,shape0);
sense_lock_shape(f1_1f,f1_0f,shape1) causes  lock_shape(f1_0f,shape1);
sense_lock_shape(f1_1f,f1_2f,shape0) causes  lock_shape(f1_2f,shape0);
sense_lock_shape(f1_1f,f1_2f,shape1) causes  lock_shape(f1_2f,shape1);
sense_lock_shape(f1_1f,f2_1f,shape0) causes  lock_shape(f2_1f,shape0);
sense_lock_shape(f1_1f,f2_1f,shape1) causes  lock_shape(f2_1f,shape1);
sense_lock_shape(f1_2f,f0_2f,shape0) causes  lock_shape(f0_2f,shape0);
sense_lock_shape(f1_2f,f0_2f,shape1) causes  lock_shape(f0_2f,shape1);
sense_lock_shape(f1_2f,f1_1f,shape0) causes  lock_shape(f1_1f,shape0);
sense_lock_shape(f1_2f,f1_1f,shape1) causes  lock_shape(f1_1f,shape1);
sense_lock_shape(f1_2f,f2_2f,shape0) causes  lock_shape(f2_2f,shape0);
sense_lock_shape(f1_2f,f2_2f,shape1) causes  lock_shape(f2_2f,shape1);
sense_lock_shape(f2_0f,f1_0f,shape0) causes  lock_shape(f1_0f,shape0);
sense_lock_shape(f2_0f,f1_0f,shape1) causes  lock_shape(f1_0f,shape1);
sense_lock_shape(f2_0f,f2_1f,shape0) causes  lock_shape(f2_1f,shape0);
sense_lock_shape(f2_0f,f2_1f,shape1) causes  lock_shape(f2_1f,shape1);
sense_lock_shape(f2_1f,f1_1f,shape0) causes  lock_shape(f1_1f,shape0);
sense_lock_shape(f2_1f,f1_1f,shape1) causes  lock_shape(f1_1f,shape1);
sense_lock_shape(f2_1f,f2_0f,shape0) causes  lock_shape(f2_0f,shape0);
sense_lock_shape(f2_1f,f2_0f,shape1) causes  lock_shape(f2_0f,shape1);
sense_lock_shape(f2_1f,f2_2f,shape0) causes  lock_shape(f2_2f,shape0);
sense_lock_shape(f2_1f,f2_2f,shape1) causes  lock_shape(f2_2f,shape1);
sense_lock_shape(f2_2f,f1_2f,shape0) causes  lock_shape(f1_2f,shape0);
sense_lock_shape(f2_2f,f1_2f,shape1) causes  lock_shape(f1_2f,shape1);
sense_lock_shape(f2_2f,f2_1f,shape0) causes  lock_shape(f2_1f,shape0);
sense_lock_shape(f2_2f,f2_1f,shape1) causes  lock_shape(f2_1f,shape1);
unlock(f0_0f,f0_1f,key0_0,shape0) causes  open(f0_1f), -locked(f0_1f) if  lock_shape(f0_1f,shape0);
unlock(f0_0f,f0_1f,key1_0,shape1) causes  open(f0_1f), -locked(f0_1f) if  lock_shape(f0_1f,shape1);
unlock(f0_0f,f0_1f,key1_1,shape1) causes  open(f0_1f), -locked(f0_1f) if  lock_shape(f0_1f,shape1);
unlock(f0_0f,f1_0f,key0_0,shape0) causes  open(f1_0f), -locked(f1_0f) if  lock_shape(f1_0f,shape0);
unlock(f0_0f,f1_0f,key1_0,shape1) causes  open(f1_0f), -locked(f1_0f) if  lock_shape(f1_0f,shape1);
unlock(f0_0f,f1_0f,key1_1,shape1) causes  open(f1_0f), -locked(f1_0f) if  lock_shape(f1_0f,shape1);
unlock(f0_1f,f0_0f,key0_0,shape0) causes  open(f0_0f), -locked(f0_0f) if  lock_shape(f0_0f,shape0);
unlock(f0_1f,f0_0f,key1_0,shape1) causes  open(f0_0f), -locked(f0_0f) if  lock_shape(f0_0f,shape1);
unlock(f0_1f,f0_0f,key1_1,shape1) causes  open(f0_0f), -locked(f0_0f) if  lock_shape(f0_0f,shape1);
unlock(f0_1f,f0_2f,key0_0,shape0) causes  open(f0_2f), -locked(f0_2f) if  lock_shape(f0_2f,shape0);
unlock(f0_1f,f0_2f,key1_0,shape1) causes  open(f0_2f), -locked(f0_2f) if  lock_shape(f0_2f,shape1);
unlock(f0_1f,f0_2f,key1_1,shape1) causes  open(f0_2f), -locked(f0_2f) if  lock_shape(f0_2f,shape1);
unlock(f0_1f,f1_1f,key0_0,shape0) causes  open(f1_1f), -locked(f1_1f) if  lock_shape(f1_1f,shape0);
unlock(f0_1f,f1_1f,key1_0,shape1) causes  open(f1_1f), -locked(f1_1f) if  lock_shape(f1_1f,shape1);
unlock(f0_1f,f1_1f,key1_1,shape1) causes  open(f1_1f), -locked(f1_1f) if  lock_shape(f1_1f,shape1);
unlock(f0_2f,f0_1f,key0_0,shape0) causes  open(f0_1f), -locked(f0_1f) if  lock_shape(f0_1f,shape0);
unlock(f0_2f,f0_1f,key1_0,shape1) causes  open(f0_1f), -locked(f0_1f) if  lock_shape(f0_1f,shape1);
unlock(f0_2f,f0_1f,key1_1,shape1) causes  open(f0_1f), -locked(f0_1f) if  lock_shape(f0_1f,shape1);
unlock(f0_2f,f1_2f,key0_0,shape0) causes  open(f1_2f), -locked(f1_2f) if  lock_shape(f1_2f,shape0);
unlock(f0_2f,f1_2f,key1_0,shape1) causes  open(f1_2f), -locked(f1_2f) if  lock_shape(f1_2f,shape1);
unlock(f0_2f,f1_2f,key1_1,shape1) causes  open(f1_2f), -locked(f1_2f) if  lock_shape(f1_2f,shape1);
unlock(f1_0f,f0_0f,key0_0,shape0) causes  open(f0_0f), -locked(f0_0f) if  lock_shape(f0_0f,shape0);
unlock(f1_0f,f0_0f,key1_0,shape1) causes  open(f0_0f), -locked(f0_0f) if  lock_shape(f0_0f,shape1);
unlock(f1_0f,f0_0f,key1_1,shape1) causes  open(f0_0f), -locked(f0_0f) if  lock_shape(f0_0f,shape1);
unlock(f1_0f,f1_1f,key0_0,shape0) causes  open(f1_1f), -locked(f1_1f) if  lock_shape(f1_1f,shape0);
unlock(f1_0f,f1_1f,key1_0,shape1) causes  open(f1_1f), -locked(f1_1f) if  lock_shape(f1_1f,shape1);
unlock(f1_0f,f1_1f,key1_1,shape1) causes  open(f1_1f), -locked(f1_1f) if  lock_shape(f1_1f,shape1);
unlock(f1_0f,f2_0f,key0_0,shape0) causes  open(f2_0f), -locked(f2_0f) if  lock_shape(f2_0f,shape0);
unlock(f1_0f,f2_0f,key1_0,shape1) causes  open(f2_0f), -locked(f2_0f) if  lock_shape(f2_0f,shape1);
unlock(f1_0f,f2_0f,key1_1,shape1) causes  open(f2_0f), -locked(f2_0f) if  lock_shape(f2_0f,shape1);
unlock(f1_1f,f0_1f,key0_0,shape0) causes  open(f0_1f), -locked(f0_1f) if  lock_shape(f0_1f,shape0);
unlock(f1_1f,f0_1f,key1_0,shape1) causes  open(f0_1f), -locked(f0_1f) if  lock_shape(f0_1f,shape1);
unlock(f1_1f,f0_1f,key1_1,shape1) causes  open(f0_1f), -locked(f0_1f) if  lock_shape(f0_1f,shape1);
unlock(f1_1f,f1_0f,key0_0,shape0) causes  open(f1_0f), -locked(f1_0f) if  lock_shape(f1_0f,shape0);
unlock(f1_1f,f1_0f,key1_0,shape1) causes  open(f1_0f), -locked(f1_0f) if  lock_shape(f1_0f,shape1);
unlock(f1_1f,f1_0f,key1_1,shape1) causes  open(f1_0f), -locked(f1_0f) if  lock_shape(f1_0f,shape1);
unlock(f1_1f,f1_2f,key0_0,shape0) causes  open(f1_2f), -locked(f1_2f) if  lock_shape(f1_2f,shape0);
unlock(f1_1f,f1_2f,key1_0,shape1) causes  open(f1_2f), -locked(f1_2f) if  lock_shape(f1_2f,shape1);
unlock(f1_1f,f1_2f,key1_1,shape1) causes  open(f1_2f), -locked(f1_2f) if  lock_shape(f1_2f,shape1);
unlock(f1_1f,f2_1f,key0_0,shape0) causes  open(f2_1f), -locked(f2_1f) if  lock_shape(f2_1f,shape0);
unlock(f1_1f,f2_1f,key1_0,shape1) causes  open(f2_1f), -locked(f2_1f) if  lock_shape(f2_1f,shape1);
unlock(f1_1f,f2_1f,key1_1,shape1) causes  open(f2_1f), -locked(f2_1f) if  lock_shape(f2_1f,shape1);
unlock(f1_2f,f0_2f,key0_0,shape0) causes  open(f0_2f), -locked(f0_2f) if  lock_shape(f0_2f,shape0);
unlock(f1_2f,f0_2f,key1_0,shape1) causes  open(f0_2f), -locked(f0_2f) if  lock_shape(f0_2f,shape1);
unlock(f1_2f,f0_2f,key1_1,shape1) causes  open(f0_2f), -locked(f0_2f) if  lock_shape(f0_2f,shape1);
unlock(f1_2f,f1_1f,key0_0,shape0) causes  open(f1_1f), -locked(f1_1f) if  lock_shape(f1_1f,shape0);
unlock(f1_2f,f1_1f,key1_0,shape1) causes  open(f1_1f), -locked(f1_1f) if  lock_shape(f1_1f,shape1);
unlock(f1_2f,f1_1f,key1_1,shape1) causes  open(f1_1f), -locked(f1_1f) if  lock_shape(f1_1f,shape1);
unlock(f1_2f,f2_2f,key0_0,shape0) causes  open(f2_2f), -locked(f2_2f) if  lock_shape(f2_2f,shape0);
unlock(f1_2f,f2_2f,key1_0,shape1) causes  open(f2_2f), -locked(f2_2f) if  lock_shape(f2_2f,shape1);
unlock(f1_2f,f2_2f,key1_1,shape1) causes  open(f2_2f), -locked(f2_2f) if  lock_shape(f2_2f,shape1);
unlock(f2_0f,f1_0f,key0_0,shape0) causes  open(f1_0f), -locked(f1_0f) if  lock_shape(f1_0f,shape0);
unlock(f2_0f,f1_0f,key1_0,shape1) causes  open(f1_0f), -locked(f1_0f) if  lock_shape(f1_0f,shape1);
unlock(f2_0f,f1_0f,key1_1,shape1) causes  open(f1_0f), -locked(f1_0f) if  lock_shape(f1_0f,shape1);
unlock(f2_0f,f2_1f,key0_0,shape0) causes  open(f2_1f), -locked(f2_1f) if  lock_shape(f2_1f,shape0);
unlock(f2_0f,f2_1f,key1_0,shape1) causes  open(f2_1f), -locked(f2_1f) if  lock_shape(f2_1f,shape1);
unlock(f2_0f,f2_1f,key1_1,shape1) causes  open(f2_1f), -locked(f2_1f) if  lock_shape(f2_1f,shape1);
unlock(f2_1f,f1_1f,key0_0,shape0) causes  open(f1_1f), -locked(f1_1f) if  lock_shape(f1_1f,shape0);
unlock(f2_1f,f1_1f,key1_0,shape1) causes  open(f1_1f), -locked(f1_1f) if  lock_shape(f1_1f,shape1);
unlock(f2_1f,f1_1f,key1_1,shape1) causes  open(f1_1f), -locked(f1_1f) if  lock_shape(f1_1f,shape1);
unlock(f2_1f,f2_0f,key0_0,shape0) causes  open(f2_0f), -locked(f2_0f) if  lock_shape(f2_0f,shape0);
unlock(f2_1f,f2_0f,key1_0,shape1) causes  open(f2_0f), -locked(f2_0f) if  lock_shape(f2_0f,shape1);
unlock(f2_1f,f2_0f,key1_1,shape1) causes  open(f2_0f), -locked(f2_0f) if  lock_shape(f2_0f,shape1);
unlock(f2_1f,f2_2f,key0_0,shape0) causes  open(f2_2f), -locked(f2_2f) if  lock_shape(f2_2f,shape0);
unlock(f2_1f,f2_2f,key1_0,shape1) causes  open(f2_2f), -locked(f2_2f) if  lock_shape(f2_2f,shape1);
unlock(f2_1f,f2_2f,key1_1,shape1) causes  open(f2_2f), -locked(f2_2f) if  lock_shape(f2_2f,shape1);
unlock(f2_2f,f1_2f,key0_0,shape0) causes  open(f1_2f), -locked(f1_2f) if  lock_shape(f1_2f,shape0);
unlock(f2_2f,f1_2f,key1_0,shape1) causes  open(f1_2f), -locked(f1_2f) if  lock_shape(f1_2f,shape1);
unlock(f2_2f,f1_2f,key1_1,shape1) causes  open(f1_2f), -locked(f1_2f) if  lock_shape(f1_2f,shape1);
unlock(f2_2f,f2_1f,key0_0,shape0) causes  open(f2_1f), -locked(f2_1f) if  lock_shape(f2_1f,shape0);
unlock(f2_2f,f2_1f,key1_0,shape1) causes  open(f2_1f), -locked(f2_1f) if  lock_shape(f2_1f,shape1);
unlock(f2_2f,f2_1f,key1_1,shape1) causes  open(f2_1f), -locked(f2_1f) if  lock_shape(f2_1f,shape1);

%% initial state ------ 

initially arm_empty;
initially locked(f0_0f);
initially locked(f2_0f);
initially locked(f1_0f);
initially locked(f0_1f);
initially at(key0_0,f1_2f);
initially at(key1_0,f2_2f);
initially at(key1_1,f0_1f);
initially at_robot(f1_2f);
initially -lock_shape(f1_1f,shape0);
initially -lock_shape(f1_1f,shape1);
initially -lock_shape(f2_1f,shape0);
initially -lock_shape(f2_1f,shape1);
initially -lock_shape(f0_2f,shape0);
initially -lock_shape(f0_2f,shape1);
initially -lock_shape(f1_2f,shape0);
initially -lock_shape(f1_2f,shape1);
initially -lock_shape(f2_2f,shape0);
initially -lock_shape(f2_2f,shape1);
initially -at(key0_0,f0_0f);
initially -at(key0_0,f1_0f);
initially -at(key0_0,f2_0f);
initially -at(key0_0,f0_1f);
initially -at(key0_0,f1_1f);
initially -at(key0_0,f2_1f);
initially -at(key0_0,f0_2f);
initially -at(key0_0,f2_2f);
initially -at(key1_0,f0_0f);
initially -at(key1_0,f1_0f);
initially -at(key1_0,f2_0f);
initially -at(key1_0,f0_1f);
initially -at(key1_0,f1_1f);
initially -at(key1_0,f2_1f);
initially -at(key1_0,f0_2f);
initially -at(key1_0,f1_2f);
initially -at(key1_1,f0_0f);
initially -at(key1_1,f1_0f);
initially -at(key1_1,f2_0f);
initially -at(key1_1,f1_1f);
initially -at(key1_1,f2_1f);
initially -at(key1_1,f0_2f);
initially -at(key1_1,f1_2f);
initially -at(key1_1,f2_2f);
initially -at_robot(f0_0f);
initially -at_robot(f1_0f);
initially -at_robot(f2_0f);
initially -at_robot(f0_1f);
initially -at_robot(f1_1f);
initially -at_robot(f2_1f);
initially -at_robot(f0_2f);
initially -at_robot(f2_2f);
initially -holding(key0_0);
initially -holding(key1_0);
initially -holding(key1_1);
initially -open(f0_0f);
initially -open(f1_0f);
initially -open(f2_0f);
initially -open(f0_1f);
initially ( lock_shape(f0_0f,shape0) , -lock_shape(f0_0f,shape1) ) | ( lock_shape(f0_0f,shape1) , -lock_shape(f0_0f,shape0) );
initially ( lock_shape(f2_0f,shape0) , -lock_shape(f2_0f,shape1) ) | ( lock_shape(f2_0f,shape1) , -lock_shape(f2_0f,shape0) );
initially ( lock_shape(f1_0f,shape0) , -lock_shape(f1_0f,shape1) ) | ( lock_shape(f1_0f,shape1) , -lock_shape(f1_0f,shape0) );
initially ( lock_shape(f0_1f,shape0) , -lock_shape(f0_1f,shape1) ) | ( lock_shape(f0_1f,shape1) , -lock_shape(f0_1f,shape0) );

%% goal state ---------- 
goal  at(key0_0,f0_0f), at(key1_0,f1_1f), at(key1_1,f0_1f);
