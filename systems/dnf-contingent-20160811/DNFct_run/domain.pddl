(define (domain adder)
   (:requirements :typing :equality)
   (:types bit)
   (:predicates (high ?b - bit) (low ?b - bit) (constant ?b - bit))
   (:action and-gate
     :parameters (?x ?y ?z - bit)
     :precondition (and (not (constant ?z)) (not (= ?x ?y)) (not (= ?x ?z)) (not (= ?y ?z)))
     :effect (and (when (and (high ?x) (high ?y)) (and (not (low ?z)) (high ?z)))
                  (when (low ?x) (and (not (high ?z)) (low ?z)))
                  (when (low ?y) (and (not (high ?z)) (low ?z)))
             )
   )
   (:action or-gate
     :parameters (?x ?y ?z - bit)
     :precondition (and (not (constant ?z)) (not (= ?x ?y)) (not (= ?x ?z)) (not (= ?y ?z)))
     :effect (and (when (high ?x) (and (not (low ?z)) (high ?z)))
                  (when (high ?y) (and (not (low ?z)) (high ?z)))
                  (when (and (low ?x) (low ?y)) (and (not (high ?z)) (low ?z))))
   )
   (:action xor-gate
     :parameters (?x ?y ?z - bit)
     :precondition (and (not (constant ?z)) (not (= ?x ?y)) (not (= ?x ?z)) (not (= ?y ?z)))
     :effect (and (when (and (high ?x) (low ?y)) (and (not (low ?z)) (high ?z)))
                  (when (and (low ?x) (high ?y)) (and (not (low ?z)) (high ?z)))
                  (when (and (low ?x) (low ?y)) (and (not (high ?z)) (low ?z)))
                  (when (and (high ?x) (high ?y)) (and (not (high ?z)) (low ?z))))
   )
   (:action not-gate
     :parameters (?x ?z - bit)
     :precondition (and (not (constant ?z)) (not (= ?x ?z)))
     :effect (and (when (low ?x) (and (not (low ?z)) (high ?z)))
                  (when (high ?x) (and (not (high ?z)) (low ?z))))
   )
)

